# ============================================================================
# Backup System Configuration
# ============================================================================

# Database Configuration
DB_NAME=rent_management
DB_USER=postgres
DB_PASSWORD=your_secure_password_here
DB_HOST=localhost
DB_PORT=5432

# Backup Directories
BACKUP_ROOT=/home/rentapp/rent-management/backups
# Alternative: Use absolute path
# BACKUP_ROOT=/var/backups/rent-management

# Retention Policy (in days)
RETENTION_DAILY=7       # Keep daily backups for 7 days
RETENTION_WEEKLY=30     # Keep weekly backups for 30 days
RETENTION_MONTHLY=90    # Keep monthly backups for 90 days

# Backup Options
BACKUP_APPLICATION=true  # Set to false to skip application files backup

# ============================================================================
# AWS S3 Configuration
# ============================================================================

ENABLE_S3_UPLOAD=false
S3_BUCKET=your-backup-bucket
AWS_ACCESS_KEY_ID=your_aws_access_key
AWS_SECRET_ACCESS_KEY=your_aws_secret_key
AWS_DEFAULT_REGION=us-east-1

# S3 Storage Class Options:
# - STANDARD: Frequently accessed data
# - STANDARD_IA: Infrequently accessed data (cheaper)
# - GLACIER: Long-term archival (cheapest)
S3_STORAGE_CLASS=STANDARD_IA

# ============================================================================
# Google Cloud Storage Configuration
# ============================================================================

ENABLE_GCS_UPLOAD=false
GCS_BUCKET=your-gcs-bucket
GCS_PROJECT_ID=your-project-id
GOOGLE_APPLICATION_CREDENTIALS=/path/to/credentials.json

# ============================================================================
# Email Notifications
# ============================================================================

ENABLE_EMAIL=false
EMAIL_TO=admin@yourdomain.com
EMAIL_FROM=backup@yourdomain.com

# SMTP Configuration (if using custom SMTP)
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_USER=your_email@gmail.com
SMTP_PASSWORD=your_app_password
SMTP_USE_TLS=true

# ============================================================================
# Backup Schedule (for reference - configure in cron)
# ============================================================================

# Daily backup at 2 AM:
# 0 2 * * * /path/to/backup.sh

# Weekly backup (Sunday at 3 AM):
# 0 3 * * 0 /path/to/backup.sh

# Monthly backup (1st day of month at 4 AM):
# 0 4 1 * * /path/to/backup.sh

# ============================================================================
# Advanced Options
# ============================================================================

# Compression level (1-9, higher = better compression but slower)
COMPRESSION_LEVEL=6

# Enable encryption (requires gpg)
ENABLE_ENCRYPTION=false
GPG_RECIPIENT=admin@yourdomain.com

# Parallel compression (requires pigz)
USE_PARALLEL_COMPRESSION=false

# Maximum backup size (in GB) - alert if exceeded
MAX_BACKUP_SIZE=10

# ============================================================================
# Monitoring & Logging
# ============================================================================

# Send alerts on failure
ALERT_ON_FAILURE=true

# Slack webhook for notifications (optional)
SLACK_WEBHOOK_URL=

# Discord webhook for notifications (optional)
DISCORD_WEBHOOK_URL=

# Log retention (in days)
LOG_RETENTION=30

# ============================================================================
# Remote Backup (Optional)
# ============================================================================

# Enable remote backup via rsync/scp
ENABLE_REMOTE_BACKUP=false
REMOTE_HOST=backup-server.yourdomain.com
REMOTE_USER=backup
REMOTE_PATH=/backups/rent-management
REMOTE_SSH_KEY=/home/rentapp/.ssh/backup_key

# ============================================================================
# Database-Specific Options
# ============================================================================

# PostgreSQL dump format
# - plain: SQL script (default)
# - custom: Custom format (for pg_restore)
# - directory: Directory format
# - tar: Tar archive
PG_DUMP_FORMAT=plain

# Include/Exclude specific tables
# PG_EXCLUDE_TABLES=django_session,django_admin_log
# PG_INCLUDE_TABLES=

# ============================================================================
# Notes
# ============================================================================

# 1. Copy this file to .env.backup and update with your values
# 2. Never commit .env.backup to version control
# 3. Ensure proper file permissions: chmod 600 .env.backup
# 4. Test your backup configuration before relying on it
# 5. Regularly test restore procedures
# 6. Monitor backup logs for errors
# 7. Verify cloud storage uploads
# 8. Keep multiple backup copies in different locations (3-2-1 rule)
